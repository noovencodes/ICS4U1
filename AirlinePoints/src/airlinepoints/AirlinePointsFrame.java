/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package airlinepoints;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author Van
 */
public class AirlinePointsFrame extends javax.swing.JFrame {
    
    // list to store all user data; essentially the database
    String[] UsersInfoList = new String[]{
    };

    public AirlinePointsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblRightImage = new javax.swing.JLabel();
        lblLeftImage = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblWeek1 = new javax.swing.JLabel();
        lblWeek2 = new javax.swing.JLabel();
        lblWeek3 = new javax.swing.JLabel();
        lblWeek4 = new javax.swing.JLabel();
        txtEnterWeek1 = new javax.swing.JTextField();
        txtEnterWeek2 = new javax.swing.JTextField();
        txtEnterWeek3 = new javax.swing.JTextField();
        txtEnterWeek4 = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnList = new javax.swing.JButton();
        btnTotalPoints = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutputUserPoints = new javax.swing.JTextArea();
        txtEnterFirstName = new javax.swing.JTextField();
        txtEnterLastName = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(250, 70, 0));
        lblTitle.setText("Airline Points");

        lblRightImage.setIcon(new javax.swing.ImageIcon("C:\\Users\\Van\\Downloads\\sanrioplanepost.jpg")); // NOI18N

        lblLeftImage.setIcon(new javax.swing.ImageIcon("C:\\Users\\Van\\Downloads\\sanrioplanepost.jpg")); // NOI18N

        lblFirstName.setText("First Name:");

        lblLastName.setText("Last Name:");

        lblWeek1.setText("Week 1:");

        lblWeek2.setText("Week 2:");

        lblWeek3.setText("Week 3:");

        lblWeek4.setText("Week 4:");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnList.setText("List");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });

        btnTotalPoints.setText("Total Points");
        btnTotalPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalPointsActionPerformed(evt);
            }
        });

        txtOutputUserPoints.setColumns(20);
        txtOutputUserPoints.setRows(5);
        jScrollPane1.setViewportView(txtOutputUserPoints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLeftImage)
                        .addGap(46, 46, 46)
                        .addComponent(lblTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRightImage))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFirstName)
                            .addComponent(lblWeek1)
                            .addComponent(lblWeek2)
                            .addComponent(lblWeek3)
                            .addComponent(lblWeek4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEnterFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEnterWeek1, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                    .addComponent(txtEnterWeek2)
                                    .addComponent(txtEnterWeek3)
                                    .addComponent(txtEnterWeek4))
                                .addGap(159, 159, 159)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnTotalPoints)
                                    .addComponent(btnList)
                                    .addComponent(btnAdd)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLastName)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtEnterLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 27, Short.MAX_VALUE)))
                .addGap(15, 15, 15))
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblWeek4)
                        .addGap(233, 233, 233))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLeftImage)
                            .addComponent(lblRightImage, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(lblTitle)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirstName)
                            .addComponent(txtEnterFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLastName)
                            .addComponent(txtEnterLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWeek1)
                            .addComponent(txtEnterWeek1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWeek2)
                            .addComponent(txtEnterWeek2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnList))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWeek3)
                            .addComponent(txtEnterWeek3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTotalPoints))
                        .addGap(18, 18, 18)
                        .addComponent(txtEnterWeek4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(21, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        // add fields to a list and add that list to the user db (database)/array
        String NewUser;
        // checks to see if the name text fields are valid names (strings) and if the point text fields are valid scores (ints/doubles). also checks to see if the user already exists in the list
        if (ValidateEntry() || CheckIfUserExists()){
            return;
        }
        
        // adds a new inputed user into the user database/existing list and outputs the list automatically
        ArrayList<String> tempUsersInfoList = new ArrayList<String>(Arrays.asList(UsersInfoList));  
        NewUser = txtEnterFirstName.getText() + ", " + txtEnterLastName.getText() + ", " + txtEnterWeek1.getText() + ", " + txtEnterWeek2.getText() + ", " + txtEnterWeek3.getText() + ", " + txtEnterWeek4.getText();
        tempUsersInfoList.add(NewUser);
        UsersInfoList = tempUsersInfoList.toArray(UsersInfoList);  
        ClearFields();
        DisplayUserList(UsersInfoList);
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed
        
        // clears all fields and outputs the existing list of users
        ClearFields();
        DisplayUserList(UsersInfoList);
        
    }//GEN-LAST:event_btnListActionPerformed

    private void btnTotalPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalPointsActionPerformed
       
        // intialized variables to store data
        double UserPoints = 0;
        double BonusPoints = 0;
        
        // loops through db and seperates all items within each individual string
        for (String users : UsersInfoList) {
            String[] user = users.split(",");
            // checks to see if user name entered exists within the db, finds it within the db, and then calculates the user's total points by adding all 4 week's points together
             if (user[0].toLowerCase().trim().equals(txtEnterFirstName.getText().toLowerCase().trim()) && user[1].toLowerCase().trim().equals(txtEnterLastName.getText().toLowerCase().trim())) {
                   UserPoints = Double.parseDouble(user[2]) + Double.parseDouble(user[3]) + Double.parseDouble(user[4]) + Double.parseDouble(user[5]);
        
                   // outputs the inputed user's total points
                   String UserTxt = String.valueOf(user[0] + " " + user[1] + "'s total points are: " + (int)UserPoints + "\n" + "They qualify for " + (int)BonusPoints + " points" ); 
                   
                   // if the inputed user's total points surpasses 5000, the bonus points variable is updated to 1000
                    if (UserPoints > 5000) {
                        BonusPoints = 1000;
                        UserTxt = String.valueOf(user[0] + " " + user[1] + "'s total points are: " + (int)UserPoints + "\n" + "They qualify for " + (int)BonusPoints + " points" );
                    } 
                    txtOutputUserPoints.setText(UserTxt);
                    break;
                }
                
                // if the inputed user does not exist within the db, an error message is outputed
                else {
                   txtOutputUserPoints.setText("");
                   txtOutputUserPoints.setText("This user doesn't exist. Try again!"); 
                }
        } 
        
    }//GEN-LAST:event_btnTotalPointsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AirlinePointsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AirlinePointsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AirlinePointsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AirlinePointsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AirlinePointsFrame().setVisible(true);
            }
        });
    }

    // function to clear all fields
    public void ClearFields() {
        txtEnterFirstName.setText("");
        txtEnterLastName.setText("");
        txtEnterWeek1.setText("");
        txtEnterWeek2.setText("");
        txtEnterWeek3.setText("");
        txtEnterWeek4.setText("");
        txtOutputUserPoints.setText("");
    }

    // function to print out the entire user db
    public void DisplayUserList(String[] UserList) {
        String UserTxt = "";
        for (String users : UsersInfoList) {
            String[] user = users.split(",");
            for (int i = 0; i < user.length; i++) {
                UserTxt = UserTxt + user[i] + " ";
            }
            UserTxt = UserTxt + "\n";

        }
        txtOutputUserPoints.setText(UserTxt);
    }
    
    // function to check if each entry is valid (e.g if the name text field is a valid string)
    public boolean ValidateEntry() {
    
        
        if (countDigits(txtEnterFirstName.getText()) > 0 || countDigits(txtEnterLastName.getText()) > 0){
            txtOutputUserPoints.setText("A user's name cannot contain numbers. Try again!");
            return true;
        }
        
        if (countLetters(txtEnterWeek1.getText()) > 0 || countLetters(txtEnterWeek2.getText()) > 0 || countLetters(txtEnterWeek3.getText()) > 0 || countLetters(txtEnterWeek4.getText()) > 0){
            txtOutputUserPoints.setText("Points cannot contain letters. Try again!");
            return true;
        }
        
        if (txtEnterFirstName.getText().equals("") || txtEnterLastName.getText().equals("")) {
            txtOutputUserPoints.setText("A user's name cannot be blank. Try again!");
            return true;
        } 
        
        if (txtEnterWeek1.getText().equals("") || txtEnterWeek2.getText().equals("") || txtEnterWeek3.getText().equals("") || txtEnterWeek4.getText().equals("")) {
            txtOutputUserPoints.setText("A point field cannot be blank. Try again!");
            return true;
        } 

        return false;        
    }
    
    // to check if the user exist within the db
    public boolean CheckIfUserExists() {
        
        for (String users : UsersInfoList) {
            String[] user = users.split(",");
            for (int i = 0; i < user.length; i++) {
                if (user[0].toLowerCase().trim().equals(txtEnterFirstName.getText().toLowerCase().trim()) && user[1].toLowerCase().trim().equals(txtEnterLastName.getText().toLowerCase().trim())) {  
                    txtOutputUserPoints.setText("This user already exists. Try again!"); 
                    return true; 
                }
            }
        }
        return false;  
    }
    
    // to count how many digits are in an inputed text (used to check if strings contain numbers)
    public int countDigits(String stringToSearch) {
    Pattern digitRegex = Pattern.compile("\\d");
    Matcher countMatcher = digitRegex.matcher(stringToSearch);

    int count = 0;
    while (countMatcher.find()) {
        count++;
    }
    return count;
    }

     // to count how many letters are in an inputed text (used to check if ints/doubles contain letters)
    public int countLetters(String stringToSearch) {
    Pattern letterRegex = Pattern.compile("[a-zA-Z]+");
    Matcher countMatcher = letterRegex.matcher(stringToSearch);

    int count = 0;
    while (countMatcher.find()) {
        count++;
    }
    return count;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnTotalPoints;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblLeftImage;
    private javax.swing.JLabel lblRightImage;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWeek1;
    private javax.swing.JLabel lblWeek2;
    private javax.swing.JLabel lblWeek3;
    private javax.swing.JLabel lblWeek4;
    private javax.swing.JTextField txtEnterFirstName;
    private javax.swing.JTextField txtEnterLastName;
    private javax.swing.JTextField txtEnterWeek1;
    private javax.swing.JTextField txtEnterWeek2;
    private javax.swing.JTextField txtEnterWeek3;
    private javax.swing.JTextField txtEnterWeek4;
    private javax.swing.JTextArea txtOutputUserPoints;
    // End of variables declaration//GEN-END:variables
}
